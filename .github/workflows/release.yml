name: Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY_DOCKERHUB: registry.hub.docker.com
  REGISTRY_GITHUB: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_PLATFORM: linux/amd64

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Checkout repository
        uses: actions/checkout@v4.2.2
      - name: ⚙️ Preparatory stage
        run: mkdir -p /tmp/artifact/cache
      - name: ⚙️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
      - name: 🌀 Build and export
        uses: docker/build-push-action@v6
        with:
          tags: losenmann/iptv-toolkit:latest
          cache-to: type=local,dest=/tmp/artifact/cache
          outputs: type=docker,dest=/tmp/artifact/image.tar
      - name: 📦 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: /tmp/artifact

  testing:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 🔍 Checkout repository
        uses: actions/checkout@v4.2.2
      - name: 📦 Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: /tmp/artifact
      - name: ▶️ Run container
        run: |
          docker load --input /tmp/artifact/image.tar
          docker compose -f ./deploy/docker-compose.yaml up -d
      - name: ▶️ Test container
        run: |
          wget --spider -qL http://localhost:4023/files/playlist/playlist.xml
      - name: ▶️ Run tests
        run: |
          sleep 90s
          make testing

  release:
    needs: testing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: 🔍 Checkout repository
        uses: actions/checkout@v4.2.2
      - name: 🔑 Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: 🔑 Log in to GitHub
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 📦 Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: /tmp/artifact
      - name: 🏷 Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: |
            ${{ env.REGISTRY_DOCKERHUB }}/${{ github.repository }}
            ${{ env.REGISTRY_GITHUB }}/${{ github.repository }}
          tags: |
            type=raw,value=latest,priority=100,enable=true
            type=semver,pattern={{version}},priority=200,enable=true
            type=sha,prefix=sha-,suffix=,format=short,priority=300,enable=true
      - name: 📌 Push Docker image
        id: push
        uses: docker/build-push-action@v6.10.0
        with:
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/artifact/cache
          push: true
          provenance: false
